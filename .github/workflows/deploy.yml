# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push but only for the master branch
  push:
    branches: [ test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest  
    env:
      SSL_CRT: ${{ secrets.SSL_CRT }}
      SSL_KEY: ${{ secrets.SSL_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      GMAIL_API_CLIENT_ID: ${{ secrets.GMAIL_API_CLIENT_ID }}
      GMAIL_API_CLIENT_SECRET: ${{ secrets.GMAIL_API_CLIENT_SECRET }}
      GMAIL_API_REFRESH_TOKEN: ${{ secrets.GMAIL_API_REFRESH_TOKEN }}
      GOOGLE_OAUTH2_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}
      GOOGLE_OAUTH2_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}
      VIEW_REDIRECT_URL: ${{ secrets.VIEW_REDIRECT_URL }}
      RECAP_PRIV_KEY: ${{ secrets.RECAP_PRIV_KEY}}
      RECAP_PUB_KEY: ${{ secrets.RECAP_PUB_KEY}}
      GEOCODE_API_KEY: ${{ secrets.GEOCODE_API_KEY}}
      GA_VIEW_ID: ${{ secrets.GA_VIEW_ID}}
      GOOGLE_OAUTH2_CLIENT_EMAIL: ${{ GOOGLE_OAUTH2_CLIENT_EMAIL}}
      GOOGLE_OAUTH2_PRIVATE_KEY: ${{ secrets.GOOGLE_OAUTH2_PRIVATE_KEY}}
      GOOGLE_ANALYTICS_PRIVATE_KEY: ${{ secrets.GOOGLE_ANALYTICS_PRIVATE_KEY}}
      GOOGLE_ANALYTICS_CLIENT_EMAIL: ${{ secrets.GOOGLE_ANALYTICS_CLIENT_EMAIL}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: 'test'
      # Runs a set of commands using the runners shell
      - name: Create Docker images
        run: |
          # Login to github container
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          
          echo "$SSL_CRT" > client-server/ssl/server.crt
          echo "$SSL_KEY" > client-server/ssl/server.key
          
          # Build docker files and push to github container
          docker-compose build server && docker-compose push server
          docker-compose build client && docker-compose push client
